/* His name was Bruce McNair. Copyright 2025 City of Vernonia, Oregon. */
import{__awaiter as e}from"tslib";import t from"@arcgis/core/geometry/Point";import a from"@arcgis/core/geometry/SpatialReference";import{load as r,isLoaded as s,execute as o}from"@arcgis/core/geometry/operators/geodesicBufferOperator";import{execute as n}from"@arcgis/core/geometry/operators/offsetOperator";import{load as c,isLoaded as i,execute as p}from"@arcgis/core/geometry/operators/projectOperator";export const buffer=(t,a,n)=>e(void 0,void 0,void 0,function*(){return s()||(yield r()),o(t,a,{unit:n})});export const offset=(t,r,s,o,f)=>e(void 0,void 0,void 0,function*(){const e=[];let h,l,g;return f&&!i()&&(yield c()),f&&(h=p(t,new a({wkid:f}))),"both"!==r&&"left"!==r||(l=n(h||t,s,{unit:o}),h&&(l=p(l,t.spatialReference))),"both"!==r&&"right"!==r||(g=n(h||t,-s,{unit:o}),h&&(g=p(g,t.spatialReference))),l&&e.push(l),g&&e.push(g),e});export const distance=(e,t)=>{const{x:a,y:r}=e,{x:s,y:o}=t;return Math.sqrt(Math.pow(Math.abs(a-s),2)+Math.pow(Math.abs(r-o),2))};export const distance3d=(e,t)=>{const{x:a,y:r,z:s}=e,{x:o,y:n,z:c}=t;return Math.sqrt(Math.pow(Math.abs(a-o),2)+Math.pow(Math.abs(r-n),2)+Math.pow(Math.abs((s||0)-(c||0)),2))};export const linearInterpolation=(e,a,r)=>{const{x:s,y:o,spatialReference:n}=e,{x:c,y:i}=a,p=distance(e,a)/r;return new t({x:s+(c-s)/p,y:o+(i-o)/p,spatialReference:n})};export const midpoint=e=>{const{paths:[a],spatialReference:r}=e,s=a.map(e=>{const[t,a]=e;return{x:t,y:a}});let o=0,n=0;for(let e=0;e<s.length-1;e+=1)o+=distance(new t(Object.assign({},s[e])),new t(Object.assign({},s[e+1])));for(let e=0;e<s.length-1;e+=1){if(n+distance(new t(Object.assign({},s[e])),new t(Object.assign({},s[e+1])))>o/2){const a=o/2-n;return linearInterpolation(new t(Object.assign(Object.assign({},s[e]),{spatialReference:r})),new t(Object.assign(Object.assign({},s[e+1]),{spatialReference:r})),a)}n+=distance(new t(Object.assign({},s[e])),new t(Object.assign({},s[e+1])))}return new t(Object.assign(Object.assign({},s[0]),{spatialReference:r}))};export const polygonVertices=(e,a)=>{const r=[];return e.rings.forEach(e=>{e.forEach((s,o)=>{o+1<e.length&&r.push(new t({x:s[0],y:s[1],spatialReference:a}))})}),r};export const polylineVertices=(e,a)=>{const r=[];return e.paths.forEach(e=>{e.forEach(e=>{r.push(new t({x:e[0],y:e[1],spatialReference:a}))})}),r};export const textAngle=(e,t)=>{const{x:a,y:r}=e,{x:s,y:o}=t;let n=180*Math.atan2(r-o,a-s)/Math.PI;return n=n>0&&n<90?Math.abs(n-180)+180:n>90&&n<180?n=Math.abs(n-180):n<=0&&n>=-90?Math.abs(n):Math.abs(n)+180,n};