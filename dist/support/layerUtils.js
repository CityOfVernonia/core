/* His name was Bruce McNair. Copyright 2025 City of Vernonia, Oregon. */
import{__awaiter as e}from"tslib";import o from"@arcgis/core/layers/CSVLayer";import r from"@arcgis/core/layers/GeoJSONLayer";import t from"@arcgis/core/layers/GroupLayer";const i=o=>e(void 0,void 0,void 0,function*(){return yield(yield fetch(o,{cache:"reload"})).json()});export let APPLICATION_GRAPHICS_LAYER=null;export let APPLICATION_MEASURE_LAYER=null;export let APPLICATION_SKETCH_LAYER=null;export const applicationGraphicsLayer=e=>{if(APPLICATION_GRAPHICS_LAYER||!e.map)return;const o=e.map.layers;return APPLICATION_MEASURE_LAYER=new t({listMode:"hide"}),APPLICATION_SKETCH_LAYER=new t({listMode:"hide"}),APPLICATION_GRAPHICS_LAYER=new t({listMode:"hide",layers:[APPLICATION_SKETCH_LAYER,APPLICATION_MEASURE_LAYER]}),o.add(APPLICATION_GRAPHICS_LAYER),o.on("after-add",()=>{o.reorder(APPLICATION_GRAPHICS_LAYER,o.length-1)}),APPLICATION_GRAPHICS_LAYER};export const csvLayerFromJSON=(r,t)=>e(void 0,void 0,void 0,function*(){try{const e=Object.assign(Object.assign(Object.assign({},yield i(r)),{customParameters:{d:(new Date).getTime()}}),t||{});return new o(e)}catch(e){return console.log(e),new o}});export const geojsonLayerFromJSON=(o,t)=>e(void 0,void 0,void 0,function*(){try{const e=Object.assign(Object.assign(Object.assign({},yield i(o)),{customParameters:{d:(new Date).getTime()}}),t||{});return new r(e)}catch(e){return console.log(e),new r}});export const mapImageNoPopups=o=>e(void 0,void 0,void 0,function*(){var e;yield o.when(),null===(e=o.sublayers)||void 0===e||e.forEach(e=>{e.popupEnabled=!1})});export const queryFeatureGeometry=o=>e(void 0,void 0,void 0,function*(){const{layer:e,layer:{objectIdField:r},graphic:t,outSpatialReference:i}=o;try{return(yield e.queryFeatures({where:`${r} = ${t.attributes[r]}`,returnGeometry:!0,outSpatialReference:i||e.spatialReference})).features[0].geometry}catch(e){console.log(e)}});export const utilityPlansColors=(o,r)=>e(void 0,void 0,void 0,function*(){var e;const t=(yield import("@arcgis/core/Color")).default,i=(yield import("@arcgis/core/symbols/SimpleFillSymbol")).default,l=(yield import("@arcgis/core/renderers/support/UniqueValueInfo")).default,n=(yield import("@arcgis/core/renderers/UniqueValueRenderer")).default,s=(yield import("@arcgis/core/smartMapping/symbology/support/colorRamps")).byName,a=(yield import("@arcgis/core/applications/SceneViewer/colorUtils")).isBright,c=null===(e=s(r||"Point Cloud 3"))||void 0===e?void 0:e.colors;if(!c)return;let d=0;yield o.load();const u=(yield o.queryFeatures({where:"1 = 1",outFields:["title"],returnDistinctValues:!0,orderByFields:["title ASC"],returnGeometry:!1})).features,y=new i({color:[255,255,255,0],outline:{color:[255,0,0],width:2}}),p=[],m=o.labelingInfo[0],A=u.map(e=>e.attributes.title).map(e=>{const o=y.clone();d===c.length-1&&(d=0);const r=new t(c[d]);d++,o.outline&&(o.outline.color=r);const i=m.clone();return i.symbol.color=r,i.symbol.font.size=10,i.symbol.font.weight="bold",i.symbol.haloSize=1.5,i.symbol.haloColor=a(r)?new t("black"):new t("white"),i.where=`title = '${e}'`,p.push(i),new l({value:e,symbol:o})});o.renderer=new n({field:"title",defaultSymbol:y,uniqueValueInfos:A}),o.labelingInfo=p});