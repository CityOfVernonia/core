/* His name was Bruce McNair. Copyright 2025 City of Vernonia, Oregon. */
import{__awaiter as e,__decorate as t}from"tslib";import{watch as i}from"@arcgis/core/core/reactiveUtils";import{property as a,subclass as r}from"@arcgis/core/core/accessorSupport/decorators";import l from"@arcgis/core/widgets/Widget";import{tsx as o}from"@arcgis/core/widgets/support/widget";import n from"@arcgis/core/layers/GraphicsLayer";import s from"@arcgis/core/Graphic";import c from"@arcgis/core/symbols/SimpleMarkerSymbol";import d from"@arcgis/core/geometry/Point";import u from"@arcgis/core/geometry/Polyline";import{load as h,isLoaded as f,execute as p}from"@arcgis/core/geometry/operators/projectOperator";import{getNearestCoordinate as b}from"@arcgis/core/geometry/operators/proximityOperator";import{execute as m}from"@arcgis/core/geometry/operators/lengthOperator";import{execute as y}from"@arcgis/core/geometry/operators/distanceOperator";import{execute as g}from"@arcgis/core/geometry/operators/containsOperator";import _ from"./StreetsInfoDialog";import{publish as v}from"pubsub-js";import{ROAD_LAYER_TOPIC as w}from"./Basemap";const S="cov--streets",E={dataSelect:`${S}_data-select`,notice:`${S}_notice`,table:"esri-widget__table",tableBlock:`${S}_table-block`},I=[],C=[10,11,12,20,21,22],O=[1,2],A="highlight-handle",k="view-click-handle";let D=0;const N={1:"Poor",2:"Marginal",3:"Fair",4:"Good",5:"Excellent"},R={U:"UNIMPROVED (Open for Travel)",D:"GRADED & DRAINED (Natural Surface)",G:"GRADED AND DRAINED (Gravel)",O:"OIL MAT",A:"ASPHALT CONCRETE",N:"CONCRETE, BRICK, STONE",Z:"OTHER, UNKNOWN"},B={end:new c({color:"red",style:"square",size:10,outline:{color:"white",width:1}}),location:new c({color:"orange",style:"diamond",size:12,outline:{color:"white",width:1}}),start:new c({color:"green",style:"circle",size:11,outline:{color:"white",width:1}})},F={SurfaceCondition:0,SurfaceType:0,SurfaceWidth:0};let x=class extends l{constructor(e){super(e),this._about="Functional classification",this._featureInfo=null,this._graphics=new n({listMode:"hide"}),this._legendIndex=10,this._streetsInfoDialog=new _,this._viewState="home"}postInitialize(){return e(this,void 0,void 0,function*(){var e,t;const{centerlines:a,streets:r,streetsInfo:l,view:o,_graphics:n}=this;null===(e=o.map)||void 0===e||e.add(n),this._centerlinesView=yield o.whenLayerView(a),this._centerlinesView.highlightOptions={fillOpacity:.1,haloOpacity:.5},yield l.load();(yield(yield fetch(`${l.url}/legend?f=json`)).json()).layers.forEach(e=>{const{layerId:t,legend:i}=e;-1!==C.indexOf(t)&&(I[t]=i)}),null===(t=a.relationships)||void 0===t||t.forEach(e=>{const{id:t,name:i}=e;i&&i in F&&(F[i]=t)});const s=i(()=>this.visible,e=>{r.visible=e,e?(o.closePopup(),this.addHandles(o.on("click",this._viewClick.bind(this)),k),v(w,!1)):(this.removeHandles(k),this._reset(),v(w,!0))});this.addHandles([s]),f()||(yield h())})}_viewClick(t){return e(this,void 0,void 0,function*(){const{centerlines:e,view:i,_centerlinesView:a,_graphics:r,_ground:l}=this;t.stopPropagation(),this.removeHandles(A),r.removeAll();try{const o=(yield a.queryFeatures({geometry:t.mapPoint,distance:3*i.resolution,outFields:["*"]})).features[0];if(!o)return void this._reset();if(this.addHandles(a.highlight(o),A),"City of Vernonia"!==o.attributes.OWNER)return this._featureInfo={feature:o,networkData:[],m:0,z:0},void(this._viewState="feature");const n=o.attributes[e.objectIdField],c=yield Promise.all([e.queryRelatedFeatures({relationshipId:F.SurfaceWidth,objectIds:[n],outFields:["*"],orderByFields:["BEG_M ASC"]}),e.queryRelatedFeatures({relationshipId:F.SurfaceType,objectIds:[n],outFields:["*"],orderByFields:["BEG_M ASC"]}),e.queryRelatedFeatures({relationshipId:F.SurfaceCondition,objectIds:[n],outFields:["*"],orderByFields:["BEG_M ASC"]})]),h=(yield e.queryFeatures({objectIds:[o.attributes[e.objectIdField]],returnGeometry:!0,returnM:!0})).features[0].geometry,f=b(h,p(t.mapPoint,e.spatialReference)).coordinate;let _=h.paths[0][0][2]||0,v=0;h.paths[0].forEach((e,t,i)=>{const a=i[t],r=i[t+1];if(v>0)return;if(!a||!r)return;const l=new u({paths:[[a,r]],spatialReference:h.spatialReference});g(l,f)?(_+=y(f,new d({x:a[0],y:a[1],spatialReference:h.spatialReference})),v=t):_+=m(l,{unit:"feet"})});const w=(yield l.queryElevation(f)).geometry,S=w.z?3.281*w.z:0;r.addMany([new s({geometry:p(f,i.spatialReference),symbol:B.location.clone()}),new s({geometry:p(new d({x:h.paths[0][0][0],y:h.paths[0][0][1],spatialReference:h.spatialReference}),i.spatialReference),symbol:B.start.clone()}),new s({geometry:p(new d({x:h.paths[0][h.paths[0].length-1][0],y:h.paths[0][h.paths[0].length-1][1],spatialReference:h.spatialReference}),i.spatialReference),symbol:B.end.clone()})]),this._featureInfo={feature:o,networkData:c,m:Number(_.toFixed(2)),z:Number(S.toFixed(2))},i.goTo(h),this._viewState="feature"}catch(e){console.log(e)}})}_reset(){const{_graphics:e}=this;e.removeAll(),this.removeHandles(A),this._viewState="home",this._featureInfo=null}render(){const{_about:e,_featureInfo:t,_legendIndex:i,_viewState:a}=this,r=t?t.feature.attributes.LABEL||`Unnamed (${t.feature.attributes.FUNC_CLASS})`:"Streets";return o("calcite-panel",{class:S,heading:r},o("div",{hidden:"home"!==a},o("calcite-block",{collapsible:!0,heading:"Data display",expanded:!0},o("div",{class:E.dataSelect},o("calcite-select",{afterCreate:this._dataDisplaySelectAfterCreate.bind(this)},o("calcite-option",{selected:!0,value:10},"Functional classification"),o("calcite-option",{value:12},"Ownership"),o("calcite-option",{value:21},"Surface material"),o("calcite-option",{value:20},"Surface condition"),o("calcite-option",{value:22},"Surface width"),o("calcite-option",{value:11},"ODOT reported")),o("calcite-action",{disabled:"Ownership"===e||"Surface width"===e,icon:"question",scale:"s",text:"About",afterCreate:this._aboutActionAfterCreate.bind(this)})),this._renderLegend(i)),o("calcite-block",{collapsible:!0,heading:"Linear referencing"},o("calcite-label",{layout:"inline"},o("calcite-switch",{afterCreate:this._directionalArrowsSwitchAfterCreate.bind(this)}),"Directional arrows"),o("calcite-label",{layout:"inline"},o("calcite-switch",{afterCreate:this._stationingSwitchAfterCreate.bind(this)}),"Stationing"))),this._renderFeature(),o("calcite-button",{appearance:"outline",hidden:"feature"!==a,slot:"feature"===a?"footer":null,width:"full",afterCreate:this._clearButtonAfterCreate.bind(this)},"Clear"))}_aboutActionAfterCreate(e){const{_streetsInfoDialog:t}=this;e.addEventListener("click",()=>{t.show(this._about)})}_clearButtonAfterCreate(e){e.addEventListener("click",this._reset.bind(this))}_dataDisplaySelectAfterCreate(e){e.addEventListener("calciteSelectChange",()=>{const{streetsInfo:t}=this;this._about=e.selectedOption.innerText;const i=e.selectedOption.value;C.forEach(e=>{if(i===e){const i=t.findSublayerById(e);i&&(i.visible=!0)}else{const i=t.findSublayerById(e);i&&(i.visible=!1)}}),this._legendIndex=i})}_directionalArrowsSwitchAfterCreate(e){const{streetsInfo:t}=this;e.addEventListener("calciteSwitchChange",()=>{const i=t.findSublayerById(3);i&&(i.visible=e.checked)})}_renderFeature(){const{centerlines:e,_featureInfo:t,_viewState:i}=this;if(!t||"feature"!==i)return o("div",null);const{feature:a,m:r,networkData:l,z:n}=t,{attributes:{FUNC_CLASS:s,OWNER:c,MAINTAINER:d,ODOT_REPORT:u,VERNONIA:h}}=a;if(0===h)return o("div",{class:E.notice,key:D++},o("calcite-notice",{icon:"information",open:!0,scale:"s"},o("div",{slot:"message"},"Selected asset is not in Vernonia city limits. Asset data is not available.")));if(1===h&&"City of Vernonia"!==c)return[o("div",{class:E.notice,key:D++},o("calcite-notice",{icon:"information",open:!0,scale:"s"},o("div",{slot:"message"},"Selected asset is not owned by the City. Extended asset data is not available."))),o("calcite-block",{class:E.tableBlock,key:D++,label:"Asset information",expanded:!0},o("table",{class:E.table},o("tr",null,o("th",null,"Classification"),o("td",null,s)),o("tr",null,o("th",null,"Owner"),o("td",null,c)),o("tr",null,o("th",null,"ODOT reported"),o("td",null,1===u?"Yes":"No"))))];const f=a.attributes[e.objectIdField];let p=0,b="",m="";const y=l[0][f].features.map(e=>{const{BEG_M:t,END_M:i,Width:a}=e.attributes;e.attributes.BEG_M<r&&e.attributes.END_M>r&&(p=a);const l=Number(((i-t)*a).toFixed(0)).toLocaleString();return o("tr",{key:D++},o("th",null,t," - ",i),o("td",null,a,"' - ",l," ftÂ²"))}),g=l[1][f].features.map(e=>{const{BEG_M:t,END_M:i,SURF_TYPE:a}=e.attributes;return e.attributes.BEG_M<r&&e.attributes.END_M>r&&(b=R[a]),o("tr",{key:D++},o("th",null,t," - ",i),o("td",null,R[a]))}),_=l[2][f].features.map(e=>{const{BEG_M:t,END_M:i,SURF_CONDITION:a}=e.attributes;return e.attributes.BEG_M<r&&e.attributes.END_M>r&&(m=N[a]),o("tr",{key:D++},o("th",null,t," - ",i),o("td",null,N[a]))});return[o("calcite-block",{class:E.tableBlock,key:D++,label:"Asset information",expanded:!0},o("table",{class:E.table},o("tr",null,o("th",null,"Classification"),o("td",null,s)),o("tr",null,o("th",null,"Owner"),o("td",null,c)),o("tr",null,o("th",null,"Maintainer"),o("td",null,d)),o("tr",null,o("th",null,"ODOT reported"),o("td",null,1===u?"Yes":"No")),o("tr",null,o("th",null,"Station (m)"),o("td",null,r)),o("tr",null,o("th",null,"Elevation"),o("td",null,n,"'")),o("tr",null,o("th",null,"Surface type"),o("td",null,b)),o("tr",null,o("th",null,"Surface condition"),o("td",null,m)),o("tr",null,o("th",null,"Surface width"),o("td",null,p)))),o("calcite-block",{class:E.tableBlock,collapsible:!0,heading:"Surface types",key:D++},o("table",{class:E.table},g)),o("calcite-block",{class:E.tableBlock,collapsible:!0,heading:"Surface conditions",key:D++},o("table",{class:E.table},_)),o("calcite-block",{class:E.tableBlock,collapsible:!0,heading:"Surface widths and areas",key:D++},o("table",{class:E.table},y))]}_renderLegend(e){const t=I[e];return t?o("table",null,t.map(e=>{const{contentType:t,imageData:i,label:a}=e;return o("tr",{key:D++},o("td",null,o("img",{src:`data:${t};base64,${i}`})),o("td",null,a))})):(setTimeout(this._renderLegend.bind(this,e),250),null)}_stationingSwitchAfterCreate(e){const{streetsInfo:t}=this;e.addEventListener("calciteSwitchChange",()=>{O.forEach(i=>{const a=t.findSublayerById(i);a&&(a.visible=e.checked)})})}};t([a()],x.prototype,"_about",void 0),t([a()],x.prototype,"_featureInfo",void 0),t([a({aliasOf:"view.map.ground"})],x.prototype,"_ground",void 0),t([a()],x.prototype,"_legendIndex",void 0),t([a()],x.prototype,"_viewState",void 0),x=t([r("cov.components.Streets")],x);export default x;