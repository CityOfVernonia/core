/* His name was Bruce McNair. Copyright 2024 City of Vernonia, Oregon. */
import{__awaiter as e,__decorate as t}from"tslib";import{subclass as i,property as l}from"@arcgis/core/core/accessorSupport/decorators";import a from"@arcgis/core/widgets/Widget";import{tsx as s}from"@arcgis/core/widgets/support/widget";import{whenOnce as o}from"@arcgis/core/core/reactiveUtils";import c from"@arcgis/core/core/Collection";import n from"@arcgis/core/widgets/Sketch/SketchViewModel";import r from"@arcgis/core/views/interactive/snapping/FeatureSnappingLayerSource";import d from"@arcgis/core/layers/GroupLayer";import h from"@arcgis/core/layers/GraphicsLayer";import p from"@arcgis/core/Graphic";import u from"@arcgis/core/Color";import{CIMSymbol as y,SimpleFillSymbol as f,SimpleLineSymbol as _,SimpleMarkerSymbol as b,TextSymbol as m}from"@arcgis/core/symbols";import{queryFeatureGeometry as v,polylineVertices as g,polygonVertices as w,buffer as S,offset as k}from"./../../support/geometryUtils";const x="cov-panel--sketch_button-row",C="cov-panel--sketch_content",E="cov-panel--sketch_load-notice",L="cov-panel--sketch_offset-button",G="cov-panel--sketch_options",I="cov-panel--sketch_sketch-content",O="cov-panel--sketch_selection-notice",V="cov-panel--sketch_symbol-editor",T="cov-panel--sketch_symbol-editor--slider-labels",P="cov-panel--sketch_color-picker",H="cov-panel--sketch_color-picker--color",F="cov-panel--sketch_color-picker--color--selected",R={white:[255,255,255],black:[0,0,0],grey:[128,128,128],red:[237,81,81],blue:[20,158,206],green:[167,198,54],purple:[158,85,156],orange:[252,146,31],yellow:[255,222,62]},A="selected-highlights";let D=0,z=class extends a{constructor(e){super(e),this._sketch=new n({layer:new h,snappingOptions:{enabled:!0,featureEnabled:!0,selfEnabled:!0},updateOnGraphicClick:!1}),this.pointSymbol=new b({style:"circle",size:8,color:R.yellow,outline:{width:1,color:R.red}}),this.polylineSymbol=new _({color:R.red,width:2}),this.polygonSymbol=new f({color:[...R.yellow,.125],outline:{color:R.red,width:2}}),this.textSymbol=new m({text:"New text",color:R.red,haloColor:R.white,haloSize:1,horizontalAlignment:"center",verticalAlignment:"middle",font:{size:12}}),this._activeLineSymbol=new y({data:{type:"CIMSymbolReference",symbol:{type:"CIMLineSymbol",symbolLayers:[{type:"CIMSolidStroke",effects:[{type:"CIMGeometricEffectDashes",dashTemplate:[4.75,4.75],lineDashEnding:"HalfPattern",offsetAlongLine:0}],enable:!0,capStyle:"Butt",joinStyle:"Round",width:2,color:[...R.white,255]},{type:"CIMSolidStroke",enable:!0,capStyle:"Butt",joinStyle:"Round",width:2,color:[...R.red,255]}]}}}),this._activeVertexSymbol=new b({style:"circle",size:6,color:R.yellow,outline:{color:R.red,width:1}}),this._vertexSymbol=new b({style:"circle",size:6,color:R.white,outline:{color:R.red,width:1}}),this._activeFillSymbol=new f({color:[...R.yellow,.125],outline:{color:R.red,width:2}}),this.point=new h({title:"point"}),this.polyline=new h({title:"polyline"}),this.polygon=new h({title:"polygon"}),this.text=new h({title:"text"}),this.layers=new d({listMode:"hide"}),this._canUndo=!1,this._canRedo=!1,this._drawState="ready",this._hasGraphics=!1,this._viewState="sketch",this._selectState=!1,this._selectHandle=null,this._selectedGraphic=null,this._highlightedSelectedGraphic=null,this._selectedGraphicsItems=new c}postInitialize(){return e(this,void 0,void 0,(function*(){const{view:e,view:{map:t},_sketch:i,_sketch:{snappingOptions:{featureSources:l}},pointSymbol:a,textSymbol:s,point:c,polyline:n,polygon:d,text:h,layers:p}=this;i.view=e,p.addMany([d,n,c,h,i.layer]),t.add(p),[d,n,c,h].forEach((e=>{this.addHandles(e.watch("graphics.length",(()=>{this._hasGraphics=h.graphics.length+c.graphics.length+n.graphics.length+d.graphics.length>0})))}));const u=a.clone();this.addHandles(this.watch("_drawState",(e=>{"text"===e&&(this.pointSymbol=s.clone()),"point"===e&&(this.pointSymbol=u.clone())}))),this.addHandles(i.on("create",this._createEvent.bind(this))),this.addHandles(i.on("update",this._updateEvent.bind(this)));const y=()=>{this._canUndo=i.canUndo(),this._canRedo=i.canRedo()};this.addHandles([i.on("create",y),i.on("update",y),i.on("redo",y),i.on("undo",y)]),this.addHandles(this.watch("visible",(e=>{e||this._reset()}))),yield e.when(),this._pointView=yield e.whenLayerView(c),this._polylineView=yield e.whenLayerView(n),this._polygonView=yield e.whenLayerView(d),this._textView=yield e.whenLayerView(h),o((()=>{var t;return null===(t=e.popup)||void 0===t?void 0:t.visible})).then((()=>{const{popup:t}=e;this.addHandles(t.watch(["selectedFeature","visible"],(()=>{const{selectedFeature:e,visible:i}=t;this._popupFeature=e&&i?e:null})))}));const f=e=>{const{type:t}=e;"group"!==t?"csv"!==t&&"feature"!==t&&"geojson"!==t&&"wfs"!==t||l.add(new r({layer:e})):e.layers.forEach((e=>{f(e)}))};t.layers.forEach(f.bind(this)),[d,n,c,h].forEach((e=>{l.add(new r({layer:e}))})),this.addHandles(t.layers.on("after-add",(e=>{f(e.item)}))),this.addHandles(this.watch("view.map.allLayers.length",(()=>{let e=0;t.allLayers.forEach((t=>{t.internal&&e++})),t.allLayers.reorder(p,t.allLayers.length-e),t.allLayers.reorder(i._internalGraphicsLayer,t.allLayers.length-(e-1))})))}))}_setViewState(e){this._viewState=e}_addGeometry(e){const t=e.type,i=new p({geometry:e,symbol:this[`${t}Symbol`]});return this[t].add(i),i}_delete(){const{_sketch:e,_selectedGraphic:t}=this;t&&(e.complete(),t.layer.remove(t),this._setViewState("sketch"),this._selectReset())}_reset(){const{view:e,_sketch:t}=this;e.closePopup(),t.cancel(),this._drawState="ready",this._selectReset()}_create(e){const{_sketch:t}=this;this._reset(),this._drawState=e,t.create("text"===e?"point":e)}_createEvent(e){const{_drawState:t,_sketch:{layer:i},text:l,_newTextInput:a}=this,{state:s,graphic:o}=e;if("cancel"===s)return void this._reset();if("complete"!==s)return;const c=o.geometry.type;i.remove(o),"text"===t?l.add(o):this[c].add(o),"text"===t&&(this._setViewState("text"),setTimeout((()=>{a.selectText()}),100),this._newTextGraphic=o),this._drawState="ready"}_update(e){const{_sketch:t,_sketch:{layer:i}}=this;e.layer.remove(e),i.add(e),t.update(e)}_updateEvent(e){const{_sketch:{layer:t},text:i}=this,{state:l,graphics:a}=e;if("complete"!==l)return;const s=a[0],o=s.geometry.type,c=s.symbol.type;t.removeAll(),"text"===c?i.add(s):this[o].add(s),this._setViewState("sketch"),setTimeout(this._selectReset.bind(this),500)}_newTextInputAfterCreate(e){this._newTextInput=e,e.addEventListener("calciteInputInput",(()=>{const{_newTextGraphic:t}=this;if(!t)return;const i=t.symbol.clone();i.text=e.value,t.symbol=i})),this.addHandles(this.watch("_viewState",((e,t)=>{const{_newTextGraphic:i}=this;if(!i)return;const l=i.symbol.clone();"text"!==t||l.text||(l.text="New Text",i.symbol=l)})))}_newTextSubmitEvent(e){e.preventDefault(),this._setViewState("sketch"),this._newTextInput.value="New text"}_selectReset(){const{_selectHandle:e}=this;e&&(e.remove(),this._selectHandle=null),this._textClearSelection(),this._selectedGraphic=null,this._selectState=!1,this.hasHandles(A)&&this.removeHandles(A)}_clearSelection(){this._textClearSelection(),this._reset(),this._setViewState("sketch")}_textClearSelection(){const{_selectedGraphic:e}=this;if(e&&"text"===e.symbol.type&&!e.symbol.text){const t=e.symbol.clone();t.text="New Text",e.symbol=t}}_select(){const{view:t,point:i,polyline:l,polygon:a,text:o,_selectState:n}=this;this._selectState=!n,this._selectState?(t.closePopup(),this.hasHandles(A)&&this.removeHandles(A),this._selectHandle=t.on("click",(n=>e(this,void 0,void 0,(function*(){n.stopPropagation();const e=(yield t.hitTest(n,{include:[i,l,a,o]})).results;if(!e.length)return this._setViewState("sketch"),void(this._selectedGraphicsItems=new c);1===e.length?this._selectGraphic(e[0].graphic):(this._selectedGraphicsItems=new c(e.map((e=>{const{graphic:t,graphic:{geometry:{type:i},symbol:{type:l}},layer:{title:a}}=e;this.addHandles(this[`_${a}View`].highlight(t),A);const o="text"===l?"text-large":"point"===i?"point":"polyline"===i?"line":"polygon-vertices";return s("calcite-list-item",{key:D++,label:a.charAt(0).toUpperCase()+a.slice(1),onclick:this._selectGraphic.bind(this,t),onmouseenter:this._highlightSelected.bind(this,t),onmouseleave:this._unhighlightSelected.bind(this)},s("calcite-icon",{icon:o,scale:"s",slot:"content-end"}))}))),this._setViewState("graphics"))}))))):this._reset()}_selectGraphic(e){const{_symbolEditorContainer:t,_symbolEditor:i}=this;this.hasHandles(A)&&this.removeHandles(A),this._selectedGraphic=e,this._update(e),i&&this._symbolEditor.destroy(),this._symbolEditor=new $({graphic:e,container:document.createElement("div")}),t.append(this._symbolEditor.container),this._setViewState("graphic"),this._selectState=!1}_highlightSelected(e){const{_sketch:{layer:t}}=this,{geometry:i,symbol:l}=e,a=new u([0,255,0]),s=new u([0,255,0,.75]),o=l.clone();switch(o.type){case"simple-marker":case"simple-fill":Object.assign(o,{color:s,outline:{color:a}});break;case"simple-line":Object.assign(o,{color:s});break;case"text":Object.assign(o,{color:a})}this._highlightedSelectedGraphic=new p({geometry:i,symbol:o}),t.add(this._highlightedSelectedGraphic)}_unhighlightSelected(){const{_sketch:{layer:e},_highlightedSelectedGraphic:t}=this;t&&e.remove(t)}_addPopupFeature(){return e(this,void 0,void 0,(function*(){const{view:e,view:{popup:t,spatialReference:i}}=this;if(!t.selectedFeature)return;const l=t.selectedFeature,a=l.layer||l.sourceLayer;let s=l.geometry;s&&"point"===s.type?this._addGeometry(s):a&&(s=yield v({layer:a,graphic:l,outSpatialReference:i}),this._addGeometry(s),e.closePopup())}))}_addVertices(){return e(this,void 0,void 0,(function*(){const{view:{spatialReference:e},_selectedGraphic:t,_popupFeature:i}=this,l=t||i;if(!l)return;const a=l.layer||l.sourceLayer;if(!a)return;let s=l.geometry;s&&"point"!==s.type&&("graphics"!==a.type&&(s=yield v({layer:a,graphic:l,outSpatialReference:e})),"polyline"===s.type&&g(s,e).forEach((e=>{this._addGeometry(e)})),"polygon"===s.type&&w(s,e).forEach((e=>{this._addGeometry(e)})))}))}_buffer(t){return e(this,void 0,void 0,(function*(){t.preventDefault();const{view:{spatialReference:e},_bufferInput:{value:i},_selectedGraphic:l,_popupFeature:a}=this,s=l||a;if(!s)return;const o=s.layer||s.sourceLayer;let c=s.geometry;const n=i;if(c&&"point"===c.type)return this._addGeometry(S(c,n,"feet")),void this._bufferCancel();o&&("graphics"!==o.type&&(c=yield v({layer:o,graphic:s,outSpatialReference:e})),this._addGeometry(S(c,n,"feet")),this._bufferCancel())}))}_bufferCancel(){const{_selectedGraphic:e}=this;this._viewState=e?"graphic":"sketch"}_bufferInputAfterCreate(e){this._bufferInput=e,this.addHandles(this.watch("_viewState",(t=>{"buffer"===t&&e.setFocus()})))}_offset(t){return e(this,void 0,void 0,(function*(){t.preventDefault();const{view:{spatialReference:e},offsetProjectionWkid:i,_offsetInput:{value:l},_offsetSegmentedControl:{selectedItem:{value:a}},_selectedGraphic:s,_popupFeature:o}=this,c=s||o;if(!c)return;const n=c.layer||c.sourceLayer;let r=c.geometry;if(!n||"polyline"!==r.type)return;"graphics"!==n.type&&(r=yield v({layer:n,graphic:c,outSpatialReference:e}));const d=l,h=a;(yield k(r,d,"feet",h,i,e)).forEach(this._addGeometry.bind(this)),this._offsetCancel()}))}_offsetCancel(){const{_selectedGraphic:e}=this;this._viewState=e?"graphic":"sketch"}_offsetInputAfterCreate(e){this._offsetInput=e,this.addHandles(this.watch("_viewState",(t=>{"offset"===t&&e.setFocus()})))}_offsetSegmentedControlAfterCreate(e){this._offsetSegmentedControl=e}_save(e){e.preventDefault();const{point:t,polyline:i,polygon:l,text:a,_saveInput:{value:s}}=this,o=[];[t,i,l,a].forEach((e=>{e.graphics.forEach((e=>{o.push(e.toJSON())}))}));const c={features:o},n=Object.assign(document.createElement("a"),{href:`data:text/plain;charset=UTF-8,${encodeURIComponent(JSON.stringify(c))}`,download:`${s||"my_sketches"}.json`,style:{display:"none"}});document.body.appendChild(n),n.click(),document.body.removeChild(n),this._setViewState("sketch")}_saveInputAfterCreate(e){this._saveInput=e,this.addHandles(this.watch("_viewState",(t=>{"save"===t&&e.selectText()})))}_saveShow(){this._reset(),this._viewState="save"}_load(e){e.preventDefault();const{_loadInput:t,_loadInput:{files:i}}=this;let{_reader:l}=this;if(!i||!i[0])return void t.setFocus();l||(l=this._reader=new FileReader,l.onload=this._readerLoad.bind(this),l.onerror=this._readerError.bind(this));const a=i[0];l.readAsText(a)}_loadInputAfterCreate(e){this._loadInput=e}_loadShow(){this._reset(),this._setViewState("load")}_readerError(e){console.log(e),this._setViewState("sketch")}_readerLoad(){const{point:e,polyline:t,polygon:i,text:l,view:a,_reader:s}=this;if(!s)return;[e,t,i,l].forEach((e=>{e.removeAll()}));const{features:o}=JSON.parse(s.result);if(!o||!o.length)return void this._setViewState("sketch");const c=[];o.forEach((e=>{const t=p.fromJSON(e),{geometry:i,symbol:a}=t;if(!a)return void c.push(this._addGeometry(i));const s=t.geometry.type;"text"===s?l.add(t):this[s].add(t),c.push(t)})),a.goTo(c),this._setViewState("sketch")}render(){const{id:e,_canRedo:t,_canUndo:i,_drawState:l,_selectedGraphic:a,_selectedGraphicsItems:o,_popupFeature:c,_selectState:n,_sketch:r,_hasGraphics:d,_viewState:h}=this,p=c?c.geometry.type:null,u="polyline"===p||"polygon"===p,y="polyline"===p,f=a?a.geometry.type:null,_="polyline"===f||"polygon"===f,b="polyline"===f,m=`new-text-form-${e}`,v=`buffer-form-${e}`,g=`offset-form-${e}`,w=`save-form-${e}`,S=`load-form-${e}`;return s("calcite-panel",{heading:"Sketch"},s("calcite-action",{icon:"gear",text:"Options",slot:"header-actions-end"}),s("calcite-popover",{"auto-close":"",closable:"",heading:"Options","overlay-positioning":"fixed",placement:"bottom-end",scale:"s",afterCreate:e=>{const t=e.previousElementSibling;t&&(e.referenceElement=t)}},s("div",{class:G},s("calcite-label",{layout:"inline"},s("calcite-switch",{checked:"",afterCreate:e=>{e.addEventListener("calciteSwitchChange",(()=>{this._snapping=e.checked}))}}),"Snapping"),s("calcite-label",{layout:"inline",style:"--calcite-label-margin-bottom: 0;"},s("calcite-switch",{checked:"",afterCreate:e=>{e.addEventListener("calciteSwitchChange",(()=>{this._guides=e.checked}))}}),"Guides"))),s("calcite-action",{disabled:!d,icon:"save","text-enabled":"",text:"Save",slot:"header-menu-actions",onclick:this._saveShow.bind(this)}),s("calcite-action",{icon:"folder-open","text-enabled":"",text:"Load",slot:"header-menu-actions",onclick:this._loadShow.bind(this)}),s("div",{class:I,hidden:"sketch"!==h},s("div",{class:x},s("calcite-button",{appearance:"point"===l?null:"transparent","icon-start":"point",onclick:this._create.bind(this,"point")}),s("calcite-button",{appearance:"polyline"===l?null:"transparent","icon-start":"line",onclick:this._create.bind(this,"polyline")}),s("calcite-button",{appearance:"polygon"===l?null:"transparent","icon-start":"polygon-vertices",onclick:this._create.bind(this,"polygon")}),s("calcite-button",{appearance:"rectangle"===l?null:"transparent","icon-start":"rectangle",onclick:this._create.bind(this,"rectangle")}),s("calcite-button",{appearance:"circle"===l?null:"transparent","icon-start":"circle",onclick:this._create.bind(this,"circle")}),s("calcite-button",{appearance:"text"===l?null:"transparent","icon-start":"text-large",onclick:this._create.bind(this,"text")})),s("div",{class:x},s("calcite-button",{disabled:!d,appearance:n?"":"transparent","icon-start":"cursor",onclick:this._select.bind(this)}),s("calcite-button",{disabled:!i,appearance:"transparent","icon-start":"undo",onclick:r.undo.bind(r)}),s("calcite-button",{disabled:!t,appearance:"transparent","icon-start":"redo",onclick:r.redo.bind(r)})),s("div",{class:x},s("calcite-button",{appearance:"transparent",disabled:!c,"icon-start":"add-layer",onclick:this._addPopupFeature.bind(this)}),s("calcite-button",{appearance:"transparent",disabled:!u,"icon-start":"vertex-plus",onclick:this._addVertices.bind(this)}),s("calcite-button",{appearance:"transparent",disabled:!c,"icon-start":"rings",onclick:this._setViewState.bind(this,"buffer")}),s("calcite-button",{class:L,appearance:"transparent",disabled:!y,"icon-start":"hamburger",onclick:this._setViewState.bind(this,"offset")}))),s("div",{class:I,hidden:"text"!==h},s("form",{id:m,onsubmit:this._newTextSubmitEvent.bind(this)},s("calcite-label",{style:"--calcite-label-margin-bottom:0;"},"Add text",s("calcite-input",{type:"text",value:"New text",afterCreate:this._newTextInputAfterCreate.bind(this)})))),s("calcite-button",{appearance:"outline",form:m,hidden:"text"!==h,slot:"text"===h?"footer":null,type:"submit",width:"full"},"Done"),s("div",{hidden:"graphics"!==h},s("calcite-notice",{class:O,open:"",scale:"s"},s("div",{slot:"message"},o.length," sketch graphics selected"),s("calcite-link",{slot:"link",onclick:this._clearSelection.bind(this)},"Clear selection")),s("calcite-list",null,o.toArray())),s("div",{class:C,hidden:"graphic"!==h},s("div",{class:x},s("calcite-button",{disabled:!i,appearance:"transparent","icon-start":"undo",onclick:r.undo.bind(r)}),s("calcite-button",{disabled:!t,appearance:"transparent","icon-start":"redo",onclick:r.redo.bind(r)}),s("calcite-button",{appearance:"transparent","icon-start":"trash",onclick:this._delete.bind(this)}),s("calcite-button",{appearance:"transparent",disabled:!_,"icon-start":"vertex-plus",onclick:this._addVertices.bind(this)}),s("calcite-button",{appearance:"transparent","icon-start":"rings",onclick:this._setViewState.bind(this,"buffer")}),s("calcite-button",{class:L,appearance:"transparent",disabled:!b,"icon-start":"hamburger",onclick:this._setViewState.bind(this,"offset")})),s("div",{afterCreate:e=>{this._symbolEditorContainer=e}})),s("calcite-button",{appearance:"outline",hidden:"graphic"!==h,slot:"graphic"===h?"footer":null,width:"full",onclick:this._clearSelection.bind(this)},"Done"),s("div",{class:C,hidden:"buffer"!==h},s("form",{id:v,onsubmit:this._buffer.bind(this)},s("calcite-label",{style:"--calcite-label-margin-bottom:0;"},"Buffer distance",s("calcite-input-number",{max:"1000",min:"5",placeholder:"Buffer distance",step:"10",suffixText:"feet",value:"250",afterCreate:this._bufferInputAfterCreate.bind(this)})))),s("calcite-button",{appearance:"outline",hidden:"buffer"!==h,slot:"buffer"===h?"footer":null,width:"half",onclick:this._bufferCancel.bind(this)},"Cancel"),s("calcite-button",{form:v,hidden:"buffer"!==h,slot:"buffer"===h?"footer":null,type:"submit",width:"half"},"Buffer"),s("div",{class:C,hidden:"offset"!==h},s("form",{id:g,onsubmit:this._offset.bind(this)},s("calcite-label",null,"Offset distance",s("calcite-input-number",{max:"1000",min:"5",placeholder:"Offset distance",step:"10",suffixText:"feet",value:"30",afterCreate:this._offsetInputAfterCreate.bind(this)})),s("calcite-label",{style:"--calcite-label-margin-bottom:0;"},s("calcite-segmented-control",{afterCreate:this._offsetSegmentedControlAfterCreate.bind(this)},s("calcite-segmented-control-item",{checked:"",value:"both"},"Both"),s("calcite-segmented-control-item",{value:"left"},"Left"),s("calcite-segmented-control-item",{value:"right"},"Right"))))),s("calcite-button",{appearance:"outline",hidden:"offset"!==h,slot:"offset"===h?"footer":null,width:"half",onclick:this._offsetCancel.bind(this)},"Cancel"),s("calcite-button",{form:g,hidden:"offset"!==h,slot:"offset"===h?"footer":null,type:"submit",width:"half"},"Offset"),s("div",{class:C,hidden:"save"!==h},s("form",{id:w,onsubmit:this._save.bind(this)},s("calcite-label",{style:"--calcite-label-margin-bottom:0;"},"File name",s("calcite-input",{"suffix-text":".json",value:"my_sketches",afterCreate:this._saveInputAfterCreate.bind(this)})))),s("calcite-button",{appearance:"outline",hidden:"save"!==h,slot:"save"===h?"footer":null,width:"half",onclick:this._setViewState.bind(this,"sketch")},"Cancel"),s("calcite-button",{form:w,hidden:"save"!==h,slot:"save"===h?"footer":null,type:"submit",width:"half"},"Save"),s("div",{class:C,hidden:"load"!==h},s("form",{id:S,onsubmit:this._load.bind(this)},s("calcite-label",{style:"--calcite-label-margin-bottom:0;"},"ArcGIS JSON file",s("calcite-input",{accept:".json",type:"file",afterCreate:this._loadInputAfterCreate.bind(this)})),s("calcite-notice",{class:E,icon:"lightbulb",kind:"warning",scale:"s",open:""},s("div",{slot:"message"},"Existing sketch graphics will be deleted")))),s("calcite-button",{appearance:"outline",hidden:"load"!==h,slot:"load"===h?"footer":null,width:"half",onclick:this._setViewState.bind(this,"sketch")},"Cancel"),s("calcite-button",{form:S,hidden:"load"!==h,slot:"load"===h?"footer":null,type:"submit",width:"half"},"Load"))}};t([l({aliasOf:"_sketch.pointSymbol"})],z.prototype,"pointSymbol",void 0),t([l({aliasOf:"_sketch.polylineSymbol"})],z.prototype,"polylineSymbol",void 0),t([l({aliasOf:"_sketch.polygonSymbol"})],z.prototype,"polygonSymbol",void 0),t([l({aliasOf:"_sketch.activeLineSymbol"})],z.prototype,"_activeLineSymbol",void 0),t([l({aliasOf:"_sketch.activeVertexSymbol"})],z.prototype,"_activeVertexSymbol",void 0),t([l({aliasOf:"_sketch.vertexSymbol"})],z.prototype,"_vertexSymbol",void 0),t([l({aliasOf:"_sketch.activeFillSymbol"})],z.prototype,"_activeFillSymbol",void 0),t([l()],z.prototype,"_canUndo",void 0),t([l()],z.prototype,"_canRedo",void 0),t([l()],z.prototype,"_drawState",void 0),t([l()],z.prototype,"_hasGraphics",void 0),t([l({aliasOf:"_sketch.snappingOptions.featureEnabled"})],z.prototype,"_snapping",void 0),t([l({aliasOf:"_sketch.snappingOptions.selfEnabled"})],z.prototype,"_guides",void 0),t([l()],z.prototype,"_viewState",void 0),t([l()],z.prototype,"_selectState",void 0),t([l()],z.prototype,"_selectedGraphic",void 0),t([l()],z.prototype,"_popupFeature",void 0),z=t([i("cov.components.panels.Sketch")],z);export default z;let $=class extends a{constructor(e){super(e)}_setProperty(e,t){const{graphic:i,symbol:l}=this,a=l.clone();a.set({[e]:t}),i.set({symbol:a}),this.emit("set-symbol-property",{originalSymbol:l,symbol:a,graphic:i})}render(){const{symbol:e}=this;if(!e)return s("div",null);switch(e.type){case"simple-marker":return this._simpleMarkerSymbol(e);case"simple-line":return this._simpleLineSymbol(e);case"simple-fill":return this._simpleFillSymbol(e);case"text":return this._textSymbol(e);default:return s("div",null)}}_colorPicker(e,t,i){const l=new j({color:e.get(t),container:i});this.addHandles(l.watch("color",(e=>{this._setProperty(t,e)})))}_simpleMarkerSymbol(e){const{style:t,size:i,outline:{width:l}}=e;return s("div",{key:D++,class:V},s("calcite-label",null,"Color",s("div",{afterCreate:this._colorPicker.bind(this,e,"color")})),s("calcite-label",null,"Style",s("calcite-select",{afterCreate:e=>{e.addEventListener("calciteSelectChange",(()=>{this._setProperty("style",e.selectedOption.value)}))}},s("calcite-option",{key:D++,selected:"circle"===t,value:"circle"},"Circle"),s("calcite-option",{key:D++,selected:"square"===t,value:"square"},"Square"),s("calcite-option",{key:D++,selected:"diamond"===t,value:"diamond"},"Diamond"))),s("calcite-label",null,"Size",s("calcite-slider",{afterCreate:e=>{e.addEventListener("calciteSliderInput",(()=>{this._setProperty("size",e.value)}))},min:"6",max:"18",value:i,step:"1",snap:""}),s("div",{class:T},s("span",null,"Small"),s("span",null,"Large"))),s("calcite-label",null,"Outline color",s("div",{afterCreate:this._colorPicker.bind(this,e,"outline.color")})),s("calcite-label",{style:"--calcite-label-margin-bottom: 0;"},"Outline width",s("calcite-slider",{afterCreate:e=>{e.addEventListener("calciteSliderInput",(()=>{this._setProperty("outline.width",e.value)}))},min:"1",max:"4",value:l,step:"1",snap:""}),s("div",{class:T},s("span",null,"Thin"),s("span",null,"Thick"))))}_simpleLineSymbol(e){const{style:t,width:i}=e;return s("div",{key:D++,class:V},s("calcite-label",null,"Color",s("div",{afterCreate:this._colorPicker.bind(this,e,"color")})),s("calcite-label",null,"Style",s("calcite-select",{afterCreate:e=>{e.addEventListener("calciteSelectChange",(()=>{this._setProperty("style",e.selectedOption.value)}))}},s("calcite-option",{key:D++,selected:"solid"===t,value:"solid"},"Solid"),s("calcite-option",{key:D++,selected:"dash"===t,value:"dash"},"Dash"),s("calcite-option",{key:D++,selected:"dot"===t,value:"dot"},"Dot"),s("calcite-option",{key:D++,selected:"dash-dot"===t,value:"dash-dot"},"Dash Dot"))),s("calcite-label",{style:"--calcite-label-margin-bottom: 0;"},"Width",s("calcite-slider",{afterCreate:e=>{e.addEventListener("calciteSliderInput",(()=>{this._setProperty("width",e.value)}))},min:"1",max:"6",value:i,step:"1",snap:""}),s("div",{class:T},s("span",null,"Thin"),s("span",null,"Thick"))))}_simpleFillSymbol(e){const{outline:{style:t,width:i},color:{a:l}}=e;return s("div",{key:D++,class:V},s("calcite-label",null,"Line color",s("div",{afterCreate:this._colorPicker.bind(this,e,"outline.color")})),s("calcite-label",null,"Line style",s("calcite-select",{afterCreate:e=>{e.addEventListener("calciteSelectChange",(()=>{this._setProperty("outline.style",e.selectedOption.value)}))}},s("calcite-option",{key:D++,selected:"solid"===t,value:"solid"},"Solid"),s("calcite-option",{key:D++,selected:"dash"===t,value:"dash"},"Dash"),s("calcite-option",{key:D++,selected:"dot"===t,value:"dot"},"Dot"),s("calcite-option",{key:D++,selected:"dash-dot"===t,value:"dash-dot"},"Dash Dot"))),s("calcite-label",null,"Line width",s("calcite-slider",{afterCreate:e=>{e.addEventListener("calciteSliderInput",(()=>{this._setProperty("outline.width",e.value)}))},min:"1",max:"6",value:i,step:"1",snap:""}),s("div",{class:T},s("span",null,"Thin"),s("span",null,"Thick"))),s("calcite-label",null,"Fill color",s("div",{afterCreate:t=>{new j({color:e.color,container:t}).watch("color",(e=>{this._setProperty("color.r",e.r),this._setProperty("color.b",e.b),this._setProperty("color.g",e.g)}))}})),s("calcite-label",{style:"--calcite-label-margin-bottom: 0;"},"Fill opacity",s("calcite-slider",{afterCreate:e=>{e.addEventListener("calciteSliderInput",(()=>{this._setProperty("color.a",e.value)}))},min:"0",max:"1",value:l,step:"0.1",snap:""}),s("div",{class:T},s("span",null,"0%"),s("span",null,"50%"),s("span",null,"100%"))))}_textSymbol(e){return s("div",{key:D++,class:V},s("calcite-label",null,"Text",s("calcite-input",{type:"text",value:e.text,afterCreate:e=>{e.addEventListener("calciteInputInput",(()=>{this._setProperty("text",e.value)}))}})),s("calcite-label",null,"Size",s("calcite-slider",{afterCreate:e=>{e.addEventListener("calciteSliderInput",(()=>{this._setProperty("font.size",e.value)}))},min:"10",max:"18",value:e.font.size,step:"1",snap:""}),s("div",{class:T},s("span",null,"Small"),s("span",null,"Large"))),s("calcite-label",null,"Color",s("div",{afterCreate:t=>{new j({color:e.color,container:t}).watch("color",(e=>{this._setProperty("color",e)}))}})),s("calcite-label",{style:"--calcite-label-margin-bottom: 0;"},"Halo color",s("div",{afterCreate:t=>{new j({color:e.haloColor,container:t}).watch("color",(e=>{this._setProperty("haloColor",e)}))}})))}};t([l()],$.prototype,"graphic",void 0),t([l({aliasOf:"graphic.symbol"})],$.prototype,"symbol",void 0),$=t([i("cov.components.panels.Sketch.SymbolEditor")],$);let j=class extends a{constructor(e){super(e),this.colors=R}render(){return s("div",{class:P},this._renderColorTiles())}_renderColorTiles(){const{colors:e}=this,t=[];for(const i in e){const[l,a,o]=e[i],c=this.color&&l===this.r&&a===this.g&&o===this.b;t.push(s("div",{class:this.classes(H,c?F:""),style:`background-color: rgba(${l}, ${a}, ${o}, 1);`,afterCreate:e=>{e.addEventListener("click",(()=>{this.color=new u({r:l,g:a,b:o})}))}}))}return t}};t([l()],j.prototype,"color",void 0),t([l({aliasOf:"color.r"})],j.prototype,"r",void 0),t([l({aliasOf:"color.g"})],j.prototype,"g",void 0),t([l({aliasOf:"color.b"})],j.prototype,"b",void 0),t([l({aliasOf:"color.a"})],j.prototype,"a",void 0),j=t([i("cov.components.panels.Sketch.ColorPicker")],j);